# Turn on validation, so we can use import:
version: ~> 1.0

jdk:
- openjdk8

services:
- docker

import: land-of-apps/land-of-apps:travis/java-imports.yml


before_script:
- cp appmap.jar ./clients/cloud/java/
- cp upload-appmaps ./clients/cloud/java/
- curl -fsSL https://api.github.com/repos/confluentinc/cp-all-in-one/contents/cp-all-in-one/docker-compose.yml?ref=5.5.1-post | jq -r .content | base64 --decode > docker-compose.yml
- docker-compose up -d
- sleep 15
- cd ./clients/cloud/java
- mvn clean package

script:
- export MAVEN_OPTS="-javaagent:./appmap.jar -Dappmap.debug=true -Dappmap.config.file=./appmap.yml -Dappmap.record=io.confluent.examples.clients.cloud.ProducerExample.main"
- mvn exec:java -Dexec.mainClass="io.confluent.examples.clients.cloud.ProducerExample"
- export MAVEN_OPTS="-javaagent:./appmap.jar -Dappmap.debug=true -Dappmap.config.file=./appmap.yml -Dappmap.record=io.confluent.examples.clients.cloud.ConsumerExample.main"
- mvn exec:java -Dexec.mainClass="io.confluent.examples.clients.cloud.ConsumerExample"
- export MAVEN_OPTS="-javaagent:./appmap.jar -Dappmap.debug=true -Dappmap.config.file=./appmap.yml -Dappmap.record=io.confluent.examples.clients.cloud.StreamsExample.main"
- mvn exec:java -Dexec.mainClass="io.confluent.examples.clients.cloud.StreamsExample"
